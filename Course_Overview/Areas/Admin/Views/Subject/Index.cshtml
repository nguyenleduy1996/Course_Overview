@using LModels


<style>
    .pagination {
        display: flex;
        justify-content: center;
        padding: 0;
        list-style: none;
    }

        .pagination li {
            margin: 0 5px;
        }

        .pagination a, .pagination span {
            display: block;
            padding: 8px 16px;
            text-decoration: none;
            color: #007bff;
            border: 1px solid #dee2e6;
            border-radius: 5px;
        }

            .pagination a:hover {
                background-color: #e9ecef;
            }

        .pagination .active span {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }

        .pagination .disabled span {
            color: #6c757d;
            border-color: #dee2e6;
            cursor: not-allowed;
        }
</style>


<div class="content-wrapper">
    <div class="container-flug">
        @*   <div class="col-12 grid-margin">
        <div class="card">
        <div class="card-body">
        <button id="AddNewTab" class="tablink btn btn-gradient-primary mr-2">AddNew</button>
        </div>
        </div>
        </div> *@
        <div id="AddNew" class="tabcontent col-12 grid-margin">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title" style="font-weight:bolder">Subject Managerment</h4>
                    <p class="card-description" style="color: #76838f">
                        Quản lý các môn học và các lesson của môn học đó
                    </p>
                    <div class="row">
                        <div class="col-md-10">
                            <div class="form-group row">
                                <label class="col-sm-2 col-form-label">Subject Name:</label>
                                <div class="col-sm-10" style="font-weight:bolder">
                                    <input name="SubjectName" id="SubjectName" type="text" class="form-control">
                                    <button onclick="filter()" style="background: linear-gradient(to right, #da8cff, #9a55ff); color:white; position:relative;top:30px" type="button" class="btn btn-gradient-primary mr-2">Query</button>
                                </div>

                            </div>
                        </div>
                    </div>
          
                </div>
                <div class="card-body">
                    <div class="col-lg-12">
                       
                        <div id="season-list">
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Subject</h5>
                <button onclick="Close()" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="ModalAdd">
            </div>
            <div class="modal-footer">
                <button onclick="AddSubject()" type="button" class="btn btn-primary">Approve</button>
                <button onclick="Close()" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="myModalEdit" class="modal fade" role="dialog">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Subject</h5>
                <button onclick="Close()" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="ModalEdit">
            </div>
            <div class="modal-footer">
                <button onclick="Edit()" type="button" class="btn btn-primary">Approve</button>
                <button onclick="Close()" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    @*Đoạn mã hiển thị thông báo alert*@

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/AdminLayout/assets/js/Notification.js"></script>
    <script src="~/AdminLayout/assets/js/Class.js"></script>


    <script>
        $(document).ready(function () {
            $(document).on('click', '.page-link', function (event) {
                event.preventDefault();
                var page = $(this).attr('href').split('page=')[1];
                console.log(page)
                filter(page);
            });
            // Call the filter function here
            filter();
        });

        function filter(page) {
           
            var SubjectName = $("#SubjectName").val();
            var _url = '@Url.Action("PartialList")';

            var Model = {};
            Model.SubjectName = SubjectName
            Model.page = page
            $.ajax({
                url: _url,
                data: Model,
                method: 'POST',
                dataType: 'html',
                success: function (data) {
                    $('#season-list').html(data);
                    /* removeAllRows()*/

                }
            });
        }
        function RenderModalAdd() {
            clearTable()
            var _url = '@Url.Action("RenderModalAdd")';
            $.ajax({
                url: _url,
                method: 'POST',
                dataType: 'html',
                success: function (data) {
                    $('#ModalAdd').html(data);
                    $('#myModal').modal('show');
                }
            });
        }



        function ShowAdd() {
            $('#myModal').modal('show');
        }
        function Close() {
            $('#myModal').modal('hide');
            $('#myModalEdit').modal('hide');
        }

        function RenderRowContainer(TableId) {
           
            if (TableId == 'TableContainerEdit') {
                var Qty = $("#QtyContainerEdit").val();
            }else{
                var Qty = $("#QtyContainer").val();
            }
           
            var DateTime = $("#DateTime").val();
            var Description = $("#Description").val();
            var Reason = $("#Reason").val();

            var table = document.getElementById(TableId);
            console.log(table)
            var rowCount = table.getElementsByTagName("tr").length;
            console.log(rowCount)
            for (var i = 0; i < Qty; i++) {
                var newRow = `<tr>
                                                                  <td class="stt" style="font-weight: 700;">${rowCount + i + 1}</td>
                                                                  <td>
                                                                              <input type="text" class="form-control" name="No" required>
                                                                  </td>
                                                                   <td>
                                                                              <input type="text" class="form-control" name="LessionName" required>
                                                                   </td>
                                                                  <td><button onclick="removeRow(this)" class="btn btn-danger mr-2">-</button>
                                                                  </td>

                                                              </tr>`;

                // Append the new row to the table body
             //   $("#TableContainer").append(newRow); //TableId
         
                $(`#${TableId}`).append(newRow);
                $("#QtyContainer").val(0);
            }
        }






        function removeRow(button) {
            // Remove the row containing the clicked button
            $(button).closest('tr').remove();

            // Re-render the serial numbers (stt)
            reRenderSerialNumbers();
        }
        function reRenderSerialNumbers() {
            $("#TableContainer tr").each(function (index) {
                $(this).find(".stt").text(index + 1);
            });
        }
        function removeRowV2(button) {
            removeRow(button)

        }

     
        function AddSubject() {
            var documentAdd = document.getElementById("myModal")
            var tableRows = documentAdd.querySelectorAll("#TableContainer tr"); // Lấy tất cả các hàng trong bảng
            var ListContainer = [];
           
            tableRows.forEach(function (row) {
                var objectData = {};
                var inputs = row.querySelectorAll("input");
                objectData.No = inputs[0].value
                objectData.LessonName = inputs[1].value

                ListContainer.push(objectData)
            });
            var ModelSaveRequestSubmit = {};
            ModelSaveRequestSubmit.SubjectName = $("#SubjectNameAdd").val()
            ModelSaveRequestSubmit.Lession = ListContainer
            
            var _url = '@Url.Action("SubmitRequest")';
            if (ListContainer.length < 1) {
                alert("Lession Emty");
                return
            }
          
            $.ajax({
                url: _url,
                data: { ModelSaveRequestSubmit: ModelSaveRequestSubmit },
                method: 'post',
                success: function (respose) {
                    if (respose.success === true) {
                        alert("Succes")
                       filter()
                    } else {
                        alert("Fail")
                    }
                }
            });
        }
        function Delete(Id) {
            // Hiển thị hộp thoại xác nhận
            if (confirm("Are you sure you want to delete this item?")) {
                var _url = '@Url.Action("Delete")';

                $.ajax({
                    url: _url,
                    data: { Id: Id },
                    method: 'post',
                    success: function (response) {
                        if (response.success === true) {
                            alert("Success");
                            filter();  // Gọi hàm để làm mới dữ liệu hoặc giao diện
                        } else {
                            alert("Fail");
                        }
                    },
                    error: function (xhr, status, error) {
                        alert("An error occurred: " + error);
                    }
                });
            }
        }
        function RenderEdit(Id) {
            clearTable()
            var _url = '@Url.Action("RenderModalEdit")';

            $.ajax({
                url: _url,
                data: { Id: Id }, // Sửa lỗi ở đây
                method: 'POST',
                dataType: 'html',
                success: function (data) {
                    $('#ModalEdit').html(data);
                    $('#myModalEdit').modal('show');
                },
                error: function (xhr, status, error) {
                    console.error("An error occurred: " + error);
                }
            });
        }

        function Edit() {
            var SubjectId = $("#SubjectID").val();
            var SubjectName = $("#SubjectNameEdit").val();
            var _url = '@Url.Action("Edit")';

            //var documentEdit = document.getElementById("myModalEdit")
            var tableRows = document.querySelectorAll("#TableContainerEdit tr"); // Lấy tất cả các hàng trong bảng
            var ListContainer = [];

            tableRows.forEach(function (row) {
                var objectData = {};
                var inputs = row.querySelectorAll("input");
                if (inputs.length == 3) {
                    objectData.Id = inputs[0].value
                    objectData.LessonNumber = inputs[1].value
                    objectData.LessonName = inputs[2].value
                }else{
                    objectData.Id = 0
                    objectData.LessonNumber = inputs[0].value
                    objectData.LessonName = inputs[1].value
                }
            
               
              

                ListContainer.push(objectData)
            });
            var ModelSaveRequestEdit = {};
            ModelSaveRequestEdit.SubjectName = SubjectName
            ModelSaveRequestEdit.Lession = ListContainer
            ModelSaveRequestEdit.SubjectId = SubjectId

         
            if (ListContainer.length < 1) {
                alert("Lession Emty");
                return
            }
            console.log(ModelSaveRequestEdit)

            $.ajax({
                url: _url,
                data: ModelSaveRequestEdit, // Sửa lỗi ở đây
                method: 'POST',
                success: function (response) {
                    if (response.success === true) {
                        alert("Success");
                        filter();  // Gọi hàm để làm mới dữ liệu hoặc giao diện
                    } else {
                        alert("Fail");
                    }
                },
                error: function (xhr, status, error) {
                    alert("An error occurred: " + error);
                }
            });
        }


        function clearTable() {
            // Lấy phần tử tbody theo id
            var tableContainer = document.getElementById('TableContainer');
            console.log(tableContainer)
            // Kiểm tra nếu tbody có ít nhất một dòng tr
            if (tableContainer != null) {
                // Xóa toàn bộ nội dung của tbody
                tableContainer.innerHTML = '';
            }
        }

       



    </script>
}
